@page "/Ql/add"
@using BanSach.Components.Model
@using BanSach.Components.Services
@using BanSach.Components.IService
@using Microsoft.AspNetCore.Http
@using System.IO
@inject IWebHostEnvironment Environment
@inject NavigationManager navigationManager
@inject IItemManagement ItemManagement
@inject HttpClient httpClient
@rendermode InteractiveServer
@inject IDialogService DialogService
@inject ISnackbar Snackbar
<div style="display:flex ; justify-content:center;  padding: 30px 30px 0 30px; text-align:center">
    <h2 style="font-family:Arial">THÊM SÁCH</h2>
</div>
<MudGrid>
    <MudItem xs="12" sm="12">
        <MudCard>
            <MudCardContent>
                @if (product != null)
                {
                    <MudGrid>
                        <MudItem xs="12" sm="12">
                            <MudCard>
                                <MudCardContent>
                                    <MudGrid>
                                        <MudItem xs="6" sm="6" md="6">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Tên" @bind-Value="product.ProductName" />
                                        </MudItem>
                                        <MudItem xs="6" sm="6" md="6">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Tác giả" @bind-Value="product.Author" />
                                        </MudItem>

                                    </MudGrid>
                                    <MudItem xs="12" sm="12" md="12">
                                        <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Mô tả" @bind-Value="product.Description" />
                                    </MudItem>
                                    <MudGrid>
                                        <MudItem xs="6" sm="6" md="6">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Năm sản xuất" @bind-Value="product.Year" />
                                        </MudItem>
                                        <MudItem xs="6" sm="6" md="6">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Nhà xuất bản" @bind-Value="product.Publisher" />
                                        </MudItem>
                                    </MudGrid>
                                    <MudGrid>
                                        <MudItem xs="4" sm="4" md="4">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Giá gốc" @bind-Value="product.CostPrice" />
                                        </MudItem>
                                        <MudItem xs="4" sm="4" md="4">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Giá bán" @bind-Value="product.SellPrice" />
                                        </MudItem>
                                        <MudItem xs="4" sm="4" md="4">
                                            <MudTextField ShrinkLabel Variant="Variant.Outlined" Label="Số lượng" @bind-Value="product.Quatity" />
                                        </MudItem>
                                    </MudGrid>                                  
                                    <MudGrid>
                                        <MudItem xs="6" md="6">
                                            <MudSelect ShrinkLabel Label="Danh mục" Dense="true" Variant="Variant.Outlined" Margin="Margin.Dense" T="int" @bind-Value="product.CategoryId">
                                                @foreach (var category in Categories)
                                                {
                                                    <MudSelectItem Value="@category.CategoryId">
                                                        <MudText Class="mb-1">@category.CategoryName</MudText>
                                                    </MudSelectItem>
                                                }
                                            </MudSelect>
                                        </MudItem>
                                        <MudItem xs="6" sm="6" md="6">
                                            <MudTextField Variant="Variant.Outlined" ShrinkLabel Label="Số trang" @bind-Value="product.PageNumber" />
                                        </MudItem>
                                    </MudGrid>
                                    <MudGrid>
                                        <MudItem xs="6" sm="6" md="6">
                                            <MudTextField Variant="Variant.Outlined" ShrinkLabel Label="Ảnh" @bind-Value="product.Img" />
                                        </MudItem>
                                    </MudGrid>              
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                        <MudItem xs="10" sm="10">
                            <MudPaper Class="pa-4 mud-height-full">

                                @if (success)
                                {
                                    <MudText Color="Color.Success">Success</MudText>
                                }
                                else
                                {
                                    <MudText Color="@Color.Error">

                                    </MudText>
                                }
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                }
                else
                {
                    <MudText Color="Color.Error">Sản phẩm không tồn tại.</MudText>
                }

            </MudCardContent>
            <MudCardActions>     
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="Add">Thêm</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>
@if (!string.IsNullOrEmpty(successMessage) || !string.IsNullOrEmpty(errorMessage))
{
    <MudContainer Class="mt-3">
        @if (!string.IsNullOrEmpty(successMessage))
        {
            <MudAlert Severity="Severity.Success">@successMessage</MudAlert>
        }
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <MudAlert Severity="Severity.Warning">@errorMessage</MudAlert>
        }
    </MudContainer>
}

@code {
    bool success;
    string errorMessage = "";
    string successMessage = "";
    private Product product = new Product();
    private List<Product> products = new List<Product>();
    private Category category = new Category();
    private List<Category> Categories = new List<Category>();
   // string successMessage = "";
    // private string? imageTitle;
    private List<string> uploadedImages = new List<string>();
    private List<IBrowserFile> selectedFiles = new List<IBrowserFile>();
    private void UploadFiles(IReadOnlyList<IBrowserFile> files)
    {
        selectedFiles = files.ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Categories = await ItemManagement.GetAllCategogy();
            System.Diagnostics.Debug.WriteLine("2222Số lượng danh mục: " + Categories.Count);
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine("Lỗi trong OnInitializedAsync: " + ex.Message);
        }
    }

    private async Task Add()
    {
        DateTime thoiGian = DateTime.Now;
        if (product == null)
        {
            throw new ArgumentNullException(nameof(product), "product cannot be null.");
        }

        // Kiểm tra điều kiện trước khi thêm sản phẩm
        if (products.Any(p => p.ProductName.Equals(product.ProductName, StringComparison.OrdinalIgnoreCase)))
        {
            errorMessage = "Tên sản phẩm đã tồn tại.";
            success = false;
            return;
        }
        if (string.IsNullOrWhiteSpace(product.ProductName))
        {
            errorMessage = "Tên sản phẩm không được để trống.";
            success = false;
            return;
        }

        if (string.IsNullOrWhiteSpace(product.Description))
        {
            errorMessage = "Mô tả không được để trống.";
            success = false;
            return;
        }

        if (product.CostPrice <= 0)
        {
            errorMessage = "Giá gốc phải lớn hơn 0.";
            success = false;
            return;
        }

        if (product.SellPrice <= 0)
        {
            errorMessage = "Giá bán phải lớn hơn 0.";
            success = false;
            return;
        }

        if (product.Quatity < 0)
        {
            errorMessage = "Số lượng không được âm.";
            success = false;
            return;
        }

        try
        {
            product.Created = thoiGian;
            await ItemManagement.CreateItem(product);
            success = true;
            navigationManager.NavigateTo("/Ql/product");
            errorMessage = null; // Xóa thông báo lỗi nếu thành công
        }
        catch (Exception ex)
        {
            errorMessage = "Lỗi khi thêm sản phẩm: " + ex.Message;
            success = false;
        }
    }

}
