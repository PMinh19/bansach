@page "/profile"
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<AuthorizeView>
    <Authorized Context="authContext">
        <h3>Hi! You're logged in with <i>@authContext.User.Identity.Name</i>.</h3>

        <h5>Delivery Address</h5>
        <AddressForm />
        <p></p>

        <h5>Change Password</h5>

        <EditForm Model="request" OnValidSubmit="ChangePassword">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="mb-3">
                <label for="password">New Password</label>
                <InputText id="password" @bind-Value="request.Password" class="form-control" type="password" />
                <ValidationMessage For="@(() => request.Password)" />
            </div>
            <div class="mb-3">
                <label for="confirmPassword">Confirm New Password</label>
                <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password" />
                <ValidationMessage For="@(() => request.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Apply</button>
        </EditForm>
        @message
    </Authorized>
    <NotAuthorized>
        <h3>Whoops! You're not allowed to see this page.</h3>
        <h5>Please <a href="login">login</a> or <a href="register">register</a> for a new account.</h5>
    </NotAuthorized>
</AuthorizeView>

@code {
    UserChangePassword request = new UserChangePassword();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
    }
}
