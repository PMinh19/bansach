@page "/"
@using BanSach.Components.Model
@using MudBlazor
@using System.Globalization
@using BanSach.Components.IService
@using BanSach.Components.Services
@inject NavigationManager navigationManager
@inject IItemManagement ItemManagement
@inject HttpClient httpClient

<PageTitle>Home</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="pa-0">
    @if (!string.IsNullOrEmpty(message))
    {
        <MudAlert Severity="Severity.Success" Class="mt-4">
            @message
        </MudAlert>
    }

    <!-- Ảnh nổi bật -->
    <div style="display: flex; justify-content: center; width: 80%; margin-top: 20px;">
        <MudCarousel TData="string" Interval="4000" style="height: 400px; width:80%;display: flex; justify-content: center;">
            <MudCarouselItem>
                <img src="https://bookish.vn/wp-content/uploads/2019/09/sach-moi-truong.jpg"
                     alt="Product 1" 
                     style="width:100%; height: 100%; object-fit: cover; filter: grayscale(0.3);" />
                <MudCarouselItemText Style="background-color: rgba(51, 51, 51, 0.7); color: #EAEAEA;">Product 1</MudCarouselItemText>
            </MudCarouselItem>
            <MudCarouselItem>
                <img src="https://media-cdn-v2.laodong.vn/Storage/NewsPortal/2022/6/26/1060714/Gia-Dinh-1.jpg"
                     alt="Product 2" 
                     style="width:100%; height: 100%; object-fit: cover; filter: grayscale(0.3);" />
                <MudCarouselItemText Style="background-color: rgba(51, 51, 51, 0.7); color: #EAEAEA;">Product 2</MudCarouselItemText>
            </MudCarouselItem>
            <MudCarouselItem>
                <img src="https://danviet.mediacdn.vn/296231569849192448/2022/8/10/sach-van-hoc-chau-au-1-16601191849561235174541.jpg"
                     alt="Product 3" 
                     style="width:100%; height: 100%; object-fit: cover; filter: grayscale(0.3);" />
                <MudCarouselItemText Style="background-color: rgba(51, 51, 51, 0.7); color: #EAEAEA;">Product 3</MudCarouselItemText>
            </MudCarouselItem>
        </MudCarousel>
    </div>

    <MudGrid Class="pt-2">
        <MudItem xs="12" sm="12">
            <MudCard>
                <MudCardContent>
                @if (products != null)
                {
                    <MudGrid Mode="@products" Class="anh" Style="display:flex;">
                        @foreach (var item in products)
                        {
                            <MudItem sm="4" md="2" xs="5" >
                                <Button Class="button" @onclick="() => Detail(item.ProductId)">
                                    <div><img ObjectFit="ObjectFit.Cover" Src="@item.Img" Width="200" Height="230" Class="rounded-lg" /></div>
                                        <div style="width: 200px; overflow: hidden; white-space: nowrap; ">
                                            @item.ProductName
                                        </div>
                                        <div>@string.Format(new CultureInfo("vi-VN"), "{0:N0}", item.SellPrice) vnđ </div>
                                </Button>
                            </MudItem>
                        }
                    </MudGrid>
                }
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Footer Section -->
    <MudPaper Class="pa-4 mt-4" Style=" text-align: center; ">
        <MudText>Liên hệ: contact@webbookapp.com</MudText>
        <MudText>Điện thoại: 0123-456-789</MudText>
        <MudText>Địa chỉ: số 141, Chiến Thắng, Thanh Trì, Hà Nội</MudText>
    </MudPaper>
</MudContainer>

<style>
    .button {
        margin: 10px 0 0 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
        font-family: Arial;
        font-weight: bold;
    }

    .button:hover {
        transform: scale(1.05);
    }
</style>

@code {
    private string message;
    private List<Product> products = new List<Product>();

    // Lấy thông báo từ query string trong URL
    protected override void OnInitialized()
    {
        var uri = navigationManager.Uri;
        var uriComponents = new Uri(uri).Query.Split('?');
        
        if (uriComponents.Length > 1)
        {
            var queryParams = System.Web.HttpUtility.ParseQueryString(uriComponents[1]);
            message = queryParams["message"];
        }
    }

    private async Task<List<Product>> getAllSach() => await ItemManagement.GetAllItem();

    protected override async Task OnInitializedAsync()
    {
        products = await getAllSach();

        // Hiển thị thông báo trong 5 giây và ẩn đi sau đó
        if (!string.IsNullOrEmpty(message))
        {
            // Chờ 5 giây rồi xóa thông báo
            await Task.Delay(5000);
            message = null;
        }
    }

    private void Detail(int productId)
    {
        navigationManager.NavigateTo($"/Detail/{productId}");
    }

    private void Test()
    {
        navigationManager.NavigateTo("/test");
    }
}
