@page "/"
 @using System.Data
@using System.Diagnostics.Metrics
@using BanSach.Components.IService
@using BanSach.Components.Model
@using System.Globalization
@using BanSach.Components.Services
@inject IDialogService DialogService
@inject NavigationManager navigationManager
@inject IItemManagement ItemManagement
<PageTitle>Home</PageTitle>
<MudTable Items="@products" Filter="new Func<Product,bool>(FilterFunc1)" Dense="true" Breakpoint="Breakpoint.None" Virtualize="true"
          Style="white-space:nowrap" Bordered="true" RowClass="cursor-pointer" Striped="true" Hover="true" HorizontalScrollbar="true">
    <ToolBarContent>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Tìm kiếm" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>STT</MudTh>
        <MudTh>Tên</MudTh>
        <MudTh>Giá bán</MudTh>
        <MudTh>Số lượng</MudTh>
        <MudTh>Ảnh bìa</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="STT"></MudTd>
        <MudTd DataLabel="Tên">@context.ProductName</MudTd>
        <MudTd DataLabel="Giá bán">
            @string.Format(new CultureInfo("vi-VN"), "{0:N0}", context.SellPrice)
        </MudTd>
        <MudTd DataLabel="Số lượng">@context.Quatity</MudTd>
        <MudTd DataLabel="Ảnh bìa">
            <MudAvatar Image="context.Img" Size="Size.Medium" />
        </MudTd>

    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSize="10" @bind-PageIndex="@pageIndex" OnPageChanged="SetPage" />
    </PagerContent>
</MudTable>
@code{
    public List<Product> products = new List<Product>();
    public Product product = new Product();
    private string resultMessage = string.Empty;
    private string searchString1 = "";
    private IEnumerable<Product> Products = new List<Product>();
    private IEnumerable<Product> PaginatedData => Products.Skip((pageIndex - 1) * pageSize).Take(pageSize);
    private int pageSize = 10;
    private int pageIndex = 1;

    private void SetPage(int index)
    {
        pageIndex = index;
    }
    protected override async Task OnInitializedAsync()
    {
        products = await ItemManagement.GetAllItem();
        System.Diagnostics.Debug.WriteLine("Số lượng sản phẩm: " + products.Count); // Kiểm tra xem có bao nhiêu sản phẩm được trả về
        System.Diagnostics.Debug.WriteLine("1");
    }
    // tìm kiếm
    private bool FilterFunc1(Product Product) => FilterFunc(Product, searchString1);

    private bool FilterFunc(Product Product, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (Product.ProductName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{Product.CostPrice} {Product.SellPrice} {Product.CategoryId} ".Contains(searchString))
            return true;
        return false;
    }
}

 